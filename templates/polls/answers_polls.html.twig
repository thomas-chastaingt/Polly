{% extends 'base.html.twig' %}
{% block body %}
<link href="https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.css" rel="stylesheet" />
{{ form_start(form) }}
<div class="poll_view">
    <div class="card">
        <div class="poll__header">
            <p class="title">{{ poll.title }}</p>
        </div>
        <form method="POST">
            <p class="footnote secondary poll__instruction">Select your location:</p>
            <div id="map" class="map"></div>
            <p class="footnote secondary poll__instruction">Department:</p>
            <input class="title department" name="department"></input>
            {{ form_widget(form.department) }}
            <p class="footnote secondary poll__instruction">Choose your answer:</p>
            {{ form_widget(form.option) }}
            <div class="poll__options"></div>
            <button class="button button-primary poll__button">
                <div class="material-icons-round button__icon">
                    how_to_vote
                </div>{{ button_label|default('Vote') }}
            </button>
        </form>
    </div>
    {{ form_end(form) }}
    <div class="card analytics_card">
        <div
            style="display: flex; flex-direction: column; justify-content: center; align-items: center; margin-bottom: 20px ">
            <p class="title secondary">Click to share:<div class="material-icons-round" id="link">
                    link
                </div>
            </p>
            <input type="text" id="input-uri" />
            <div class="sharethis-inline-share-buttons"></div>
        </div>
        <div class="poll__header">
            <div class="title secondary analytics__title">
                <div class="material-icons-round analytics__title__icon">
                    assessment
                </div>
                Analytics
            </div>
        </div>
        <p class="footnote secondary poll__instruction">Global</p>
        <div class="analytics__global">
            <div>
                <p class="large-title">124</p>
                <p class="footnote terciary">Answers</p>
            </div>
            <div>
                <p class="large-title">3</p>
                <p class="footnote terciary">Departments</p>
            </div>
        </div>
        <p class="footnote secondary poll__instruction">Regional</p>
        <div class="poll__empty-container"></div>
    </div>
</div>

<div id="snackbar">The link has been copied</div>
<script src="https://unpkg.com/ionicons@5.0.0/dist/ionicons.js"></script>
<script src="https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.js"></script>
<script type="text/javascript"
    src="https://platform-api.sharethis.com/js/sharethis.js#property=5ef5bc91b900a200126bbfe5&product=inline-share-buttons"
    async="async"></script>
<script>
    //share part
    var input = document.getElementById("input-uri");
    input.value = document.location.href;
    document.getElementById("link").addEventListener("click", copying);

    function copying() {
        var inputUri = document.getElementById("input-uri");
        inputUri.select();
        inputUri.setSelectionRange(0, 99999)
        document.execCommand("copy");
        snackbar();
    }

    function snackbar() {
        var snackbar = document.getElementById("snackbar");
        snackbar.className = "show";
        setTimeout(function () {
            snackbar.className = snackbar.className.replace("show", "");
        }, 3000);
    }

    //end share part

    const submitButton = document.querySelector(".poll__button");
    const departmentIndicator = document.querySelector(".department");

    // Dataset of the map. Updated according to the poll country
    const dataset = {
        deps: "https://gist.githubusercontent.com/valaymerick/9690c82d6937015beb61b85a754d84e4/raw/eef0acc7967f26b3e7abf2b4519aebb3d7e9a8c2/departments-fr.geojson",
        coords: [2.3522, 46.8566],
        zoom: 4,
        initialDep: 75,
    };
    const pollOptions = document.querySelector(".poll__options").childNodes;

    submitButton.addEventListener("click", handleVote);
    departmentIndicator.value = dataset.initialDep;

    // Add events listeners to each option node
    for (const option of pollOptions) {
        option.addEventListener("click", function (event) {
            cleanOptions();
            option.classList.add("poll__option-selected");
        });
    }

    // Handle click events on the "vote" button
    function handleVote(e) {
        selectedAnswer = document.querySelector(".poll__option-selected")
            .value;

        const vote = {
            selectedAnswer,
            selectedDep: departmentIndicator.value,
        };

        // Send POST request to server

        fetch('http://localhost/Polly/public/polls/32/answers/new', {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: vote
        }).then(() => console.log("hello"));
    }

    function cleanOptions() {
        const selectedOptions = document.querySelectorAll(".poll__option-selected");
        for (const option of selectedOptions) {
            option.classList.remove("poll__option-selected");
        }
    }

    function changeScrollValue() {
        
    }

    function initMap() {
        mapboxgl.accessToken =
            "pk.eyJ1IjoidmFsYXltZXJpY2siLCJhIjoiY2pyZmoxZWE0MHcxazQ5cDh3cWl1d3Q3aSJ9.c5JVdraGeQEgNaEZR40Bdw";
        const map = new mapboxgl.Map({
            container: "map",
            style: "mapbox://styles/mapbox/streets-v11",
            center: dataset.coords,
            zoom: dataset.zoom,
            initialDep: 75,
        });
        let hoveredStateId = null;

        map.on("load", function () {
            map.addSource("states", {
                type: "geojson",
                data: dataset.deps,
            });

            map.addLayer({
                id: "state-fills",
                type: "fill",
                source: "states",
                layout: {},
                paint: {
                    "fill-color": "rgba(175, 82, 222, 0.5)",
                    "fill-opacity": [
                        "case",
                        ["boolean", ["feature-state", "hover"], false],
                        1,
                        0.5,
                    ],
                },
            });

            map.addLayer({
                id: "state-borders",
                type: "line",
                source: "states",
                layout: {},
                paint: {
                    "line-color": "#af52de",
                    "line-width": 2,
                },
            });

            map.on("click", "state-fills", function (e) {
                if (e.features.length > 0) {
                    map.setFeatureState({
                        source: "states",
                        id: hoveredStateId
                    }, {
                        hover: false
                    });
                    hoveredStateId = e.features[0].id;
                    map.setFeatureState({
                        source: "states",
                        id: hoveredStateId
                    }, {
                        hover: true
                    });
                    selectedDep = e.features[0].properties.department;
                    departmentIndicator.value = selectedDep;
                    let scroll = document.getElementById('poll_answers_new_department');
                    for(let i = 0; i <= scroll.options.length; i++){
                        let valueItem = scroll.options[i].text;
                        if( valueItem === selectedDep){
                            scroll.options[i].selected = true;
                        }
                    }
                }
            });
        });
    }

    initMap();
</script>
<style>
    select {
        border: 1px solid black;
        margin-top: 10px;
        border-radius: 10px;
        border-color: #C5C5C7;
    }
    #snackbar {
        visibility: hidden;
        min-width: 250px;
        margin-left: -125px;
        background-color: #af52de;
        color: #fff;
        text-align: center;
        border-radius: 2px;
        padding: 16px;
        position: fixed;
        z-index: 1;
        left: 50%;
        bottom: 30px;
        border-radius: 12px;
    }


    #snackbar.show {
        visibility: visible;
        -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
        animation: fadein 0.5s, fadeout 0.5s 2.5s;
    }


    @-webkit-keyframes fadein {
        from {
            bottom: 0;
            opacity: 0;
        }

        to {
            bottom: 30px;
            opacity: 1;
        }
    }

    @keyframes fadein {
        from {
            bottom: 0;
            opacity: 0;
        }

        to {
            bottom: 30px;
            opacity: 1;
        }
    }

    @-webkit-keyframes fadeout {
        from {
            bottom: 30px;
            opacity: 1;
        }

        to {
            bottom: 0;
            opacity: 0;
        }
    }

    @keyframes fadeout {
        from {
            bottom: 30px;
            opacity: 1;
        }

        to {
            bottom: 0;
            opacity: 0;
        }
    }
</style>
{% endblock %}